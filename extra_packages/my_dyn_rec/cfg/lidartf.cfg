#!/usr/bin/env python
PACKAGE = "my_dyn_rec"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("lidar_px",    double_t,    0, "lidar_tf px", 0.026,  -1, 1)
gen.add("lidar_py", double_t, 0, "lidar_tf py",    0, -1,   1)
gen.add("lidar_pz",    double_t,    0, "lidar_tf pz", 0.047,-1,1)
gen.add("lidar_or",   double_t,   0, "lidar_tf or", 0,-1.57,1.57)
gen.add("lidar_op",    double_t,    0, "lidar_tf op",  0,-1.57,1.57)
gen.add("lidar_oy",   double_t,   0, "lidar_tf oy",  3.098,-3.14,3.14)

gen.add("camera_px",    double_t,    0, "camera_tf px", 0.02,  -1, 1)
gen.add("camera_py", double_t, 0, "camera_tf py",    0, -1,   1)
gen.add("camera_pz",    double_t,    0, "camera_tf pz", 0.039,-1,1)
gen.add("camera_or",   double_t,   0, "camera_tf or", 0,-1.57,1.57)
gen.add("camera_op",    double_t,    0, "camera_tf op",  0,-1.57,1.57)
gen.add("camera_oy",   double_t,   0, "camera_tf oy",  0,-1.57,1.57)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "my_dyn_rec", "lidartf"))
